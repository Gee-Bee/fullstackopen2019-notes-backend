{"version":3,"sources":["services/notes.js","components/ToggleAll.js","components/Note.js","components/Notes.js","components/NoteForm.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["nonExisting","id","content","date","important","axios","get","then","response","data","concat","newObject","post","object","put","ToggleAll","showAll","setShowAll","onClick","Note","note","toggleImportance","label","className","Notes","notes","setNotes","setErrorMsg","notesToShow","filter","find","changedNote","notesService","returnedNote","map","catch","setTimeout","n","key","NoteForm","newNote","setNewNote","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","errorMsg","useEffect","noteService","initialNotes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ed06a73.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = ' /api/notes';\n\nconst getAll = () => {\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return (\n    axios.get(baseUrl)\n      .then((response) => response.data.concat(nonExisting))\n  );\n}\n\nconst create = (newObject) => (\n  axios.post(baseUrl, newObject)\n    .then((response) => response.data)\n)\n\nconst update = (id, object) => (\n  axios.put(`${baseUrl}/${id}`, object)\n    .then((response) => response.data)\n)\n\nexport default { getAll, create, update }","import React from 'react';\n\nconst ToggleAll = ({ showAll, setShowAll }) => (\n  <div>\n    <button onClick={() => setShowAll(!showAll)}>\n      show { showAll ? 'important' : 'all'}\n    </button>\n  </div>\n);\n\nexport default ToggleAll;","import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'mark not important' : 'mark important'\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n    );\n}\n\nexport default Note;","import React from 'react';\n\nimport notesService from '../services/notes';\nimport Note from './Note';\n\nconst Notes = ({ notes, setNotes, showAll, setErrorMsg }) => {\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important);\n\n  const toggleImportance = id => {\n    const note = notes.find(note => id === note.id);\n    const changedNote = {\n      ...note,\n      important: !note.important,\n    }\n    notesService\n      .update(id, changedNote)\n      .then((returnedNote) =>\n        setNotes(notes.map(note => note.id === id ? returnedNote : note))\n      )\n      .catch(() => {\n        setErrorMsg(`Note '${note.content}' was already deleted from server`)\n        setTimeout(() =>\n          setErrorMsg(null)\n        , 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportance(note.id)}\n    />\n  )\n  return (\n    <ul>\n      {rows()}\n    </ul>\n  )\n}\n\nexport default Notes;","import React from 'react';\n\nimport notesService from '../services/notes';\n\nconst NoteForm = ({\n  notes, setNotes,\n  newNote, setNewNote\n}) => {\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n    notesService\n      .create(noteObject)\n      .then((newNote) => {\n        setNotes(notes.concat(newNote))\n        setNewNote('');\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  }\n\n  return (\n    <form onSubmit={addNote}>\n      <input value={newNote} onChange={handleNoteChange} />\n      <button type=\"submit\">save</button>\n    </form>\n  )\n};\n\nexport default NoteForm;","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16,\n  }\n  return(\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki</em>\n    </div>\n  )\n};\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\n\nimport noteService from './services/notes';\nimport ToggleAll from './components/ToggleAll';\nimport Notes from './components/Notes';\nimport NoteForm from './components/NoteForm';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then((initialNotes) => setNotes(initialNotes));\n  }, [])\n\n  return (\n    <div>\n      <h1 style={{color: 'blue'}}>Notes</h1>\n      <Notification message={errorMsg} />\n      <ToggleAll showAll={showAll} setShowAll={setShowAll} />\n      <Notes\n        notes={notes} setNotes={setNotes}\n        showAll={showAll}\n        setErrorMsg={setErrorMsg}\n      />\n      <NoteForm notes={notes} setNotes={setNotes}\n        newNote={newNote} setNewNote={setNewNote}\n      />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}